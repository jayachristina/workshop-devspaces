openapi: 3.0.2
info:
    title: Globex Mobile API Gateway
    version: 1.0.0
    description: Globex APIs made accessible to Mobile App to view Globex' catalog and products
paths:
    /mobile/services/category/list:
        summary: Get list of categories
        description: Return the list of categories
        get:
            responses:
                '200':
                    description: Get list of categories
            description: Get list of categories
    /mobile/services/product:
        summary: Get a paginated list of products
        description: Get a paginated list of products
        get:
            responses:
                '200':
                    content:
                        application/json: {}
                    description: Product list found.
            description: Get a paginated list of products
        parameters:
            -
                name: page
                description: The page number. First page is 1.
                schema:
                    type: integer
                in: query
            -
                name: limit
                description: The maximum number of products returned.
                schema:
                    type: integer
                in: query
            -
                name: inventory
                description: Whether to include inventory information.
                schema:
                    type: boolean
                in: query
    '/mobile/services/product/{id}':
        summary: Get product by id
        description: Get product by id
        get:
            parameters:
                -
                    name: inventory
                    description: 'If true, include inventory information'
                    schema:
                        type: boolean
                    in: query
                    required: false
            responses:
                '200':
                    description: Product found
                '404':
                    description: Product not found
            summary: Get product by id
            description: Get product by id
        parameters:
            -
                name: id
                schema:
                    type: string
                in: path
                required: true
    '/mobile/services/product/list/{ids}':
        summary: Get product list by ids
        description: Get product list by ids
        get:
            parameters:
                -
                    name: inventory
                    description: Whether to include inventory information
                    schema:
                        type: boolean
                    in: query
            responses:
                '200':
                    description: product list found
            summary: Get product list
            description: Get product list
        parameters:
            -
                name: ids
                description: comma separated list of product ids
                schema:
                    type: string
                in: path
                required: true
    '/mobile/services/product/category/{categories}':
        summary: Get products by categories
        description: Return the list of products that belong to the given categories.
        get:
            responses:
                '200':
                    description: Product list found.
            summary: Get products by category
        parameters:
            -
                name: categories
                description: Comma separated list of category names.
                schema:
                    type: string
                in: path
                required: true
            -
                name: inventory
                description: Whether to include inventory information.
                schema:
                    type: boolean
                in: query
    '/mobile/services/product/tag/{tags}':
        summary: Get products by tags
        description: Return the list of products that are tagged with he given tags.
        get:
            responses:
                '200':
                    description: Product list found.
            summary: Get products by tag
        parameters:
            -
                name: inventory
                description: Whether to include inventory information.
                schema:
                    type: boolean
                in: query
            -
                name: tags
                description: Comma separated list of tags
                schema:
                    type: string
                in: path
                required: true
components:
    schemas:
        paginated-product-list:
            title: Root Type for paginated-product-list
            description: ''
            type: object    
    securitySchemes:
        mobile_login:
            type: oauth2
            description : The Authorization URL is the value of [issuer] key from the well know configuration of SSO
            flows:                
                implicit:
                    authorizationUrl: <replaceme>
                    scopes: {any}